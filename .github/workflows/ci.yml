name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  # Cache cargo tools in a shared job
  install_tools:
    name: Install and Cache Tools
    runs-on: ubuntu-latest
    outputs:
      tools-cache-key: ${{ steps.tools-key.outputs.key }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Generate tools cache key
      id: tools-key
      run: echo "key=tools-${{ runner.os }}-$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT
    
    - name: Cache cargo tools
      id: tools-cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/cargo-tarpaulin
          ~/.cargo/bin/cargo-audit
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: ${{ steps.tools-key.outputs.key }}
        restore-keys: |
          tools-${{ runner.os }}-
    
    - name: Install tools if not cached
      if: steps.tools-cache.outputs.cache-hit != 'true'
      run: |
        cargo install cargo-tarpaulin cargo-audit

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        rust: [stable, beta]
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --all-features --verbose

    - name: Run doc tests
      run: cargo test --doc --verbose

  # Cross-compilation check
  cross_compile:
    name: Cross-compilation Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Check Windows target compilation
      run: |
        rustup target add x86_64-pc-windows-gnu
        cargo check --target x86_64-pc-windows-gnu
    
    - name: Check macOS target compilation  
      run: |
        rustup target add x86_64-apple-darwin
        cargo check --target x86_64-apple-darwin

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: install_tools
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Restore cached tools
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/cargo-audit
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: ${{ needs.install_tools.outputs.tools-cache-key }}
        restore-keys: |
          tools-${{ runner.os }}-
    
    - name: Run security audit
      run: cargo audit

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: install_tools
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Restore cached tools
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/cargo-tarpaulin
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: ${{ needs.install_tools.outputs.tools-cache-key }}
        restore-keys: |
          tools-${{ runner.os }}-
    
    - name: Generate coverage report
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
    
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Check documentation
      run: cargo doc --no-deps --document-private-items --all-features
      env:
        RUSTDOCFLAGS: "-D warnings"

  publish_check:
    name: Publish Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Check if publishable
      run: cargo publish --dry-run --allow-dirty